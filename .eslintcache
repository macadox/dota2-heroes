[{"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\index.js":"1","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\App.js":"2","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\context.js":"3","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\Error.js":"4","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\Home.js":"5","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\HeroesList.js":"6","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Hero.js":"7","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Loading.js":"8","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\hooks\\useFetch.js":"9","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\index.js":"10","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroLore.js":"11","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroMatchups.js":"12","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\PopularItemsList.js":"13","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\AverageResultsTable.js":"14","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroPresenceTable.js":"15","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroAbilities.js":"16","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroStats.js":"17","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroHeader.js":"18","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\SearchBar.js":"19","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Option.js":"20","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\SortListbox.js":"21","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\FilterListbox.js":"22"},{"size":277,"mtime":1611847913017,"results":"23","hashOfConfig":"24"},{"size":627,"mtime":1612112701543,"results":"25","hashOfConfig":"24"},{"size":2826,"mtime":1612715765446,"results":"26","hashOfConfig":"24"},{"size":115,"mtime":1611848442850,"results":"27","hashOfConfig":"24"},{"size":3947,"mtime":1612714257019,"results":"28","hashOfConfig":"24"},{"size":1959,"mtime":1612719856657,"results":"29","hashOfConfig":"24"},{"size":960,"mtime":1611862865176,"results":"30","hashOfConfig":"24"},{"size":332,"mtime":1612641828802,"results":"31","hashOfConfig":"24"},{"size":1052,"mtime":1612640939488,"results":"32","hashOfConfig":"24"},{"size":4346,"mtime":1612212172432,"results":"33","hashOfConfig":"24"},{"size":1148,"mtime":1612716437122,"results":"34","hashOfConfig":"24"},{"size":594,"mtime":1612116298732,"results":"35","hashOfConfig":"24"},{"size":2276,"mtime":1612381314177,"results":"36","hashOfConfig":"24"},{"size":1074,"mtime":1612211326813,"results":"37","hashOfConfig":"24"},{"size":2330,"mtime":1612211680002,"results":"38","hashOfConfig":"24"},{"size":828,"mtime":1612381397723,"results":"39","hashOfConfig":"24"},{"size":2829,"mtime":1612212139274,"results":"40","hashOfConfig":"24"},{"size":1091,"mtime":1612205363858,"results":"41","hashOfConfig":"24"},{"size":682,"mtime":1612467234558,"results":"42","hashOfConfig":"24"},{"size":495,"mtime":1612714851446,"results":"43","hashOfConfig":"24"},{"size":1919,"mtime":1612714937601,"results":"44","hashOfConfig":"24"},{"size":2012,"mtime":1612711034729,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"btrlm4",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\index.js",[],["100","101"],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\App.js",["102"],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\n// Pages\r\nimport Home from \"./pages/Home\";\r\nimport HeroPage from \"./pages/HeroPage\";\r\nimport Error from \"./pages/Error\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <Home />\r\n        </Route>\r\n        <Route path='/hero/:id' children={<HeroPage />}></Route>\r\n        <Route path='*'>\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\context.js",["103"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useFetch } from \"./hooks/useFetch\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst API_KEY = `19115D982DBF9D2E9DFD15CE88B443BD`;\r\nconst API_URI = `https://api.opendota.com/api/`;\r\nconst CDN_URI = `http://cdn.dota2.com`;\r\n\r\n// { heroes, heroAbilities, heroLore, abilities, items, itemIds }\r\nconst resources = [\r\n  {\r\n    url: `${API_URI}heroStats/?api_key=${API_KEY}`,\r\n    key: \"heroes\",\r\n  },\r\n  {\r\n    url: `${API_URI}constants/hero_abilities/?api_key=${API_KEY}`,\r\n    key: \"heroAbilities\",\r\n  },\r\n  {\r\n    url: `${API_URI}constants/hero_lore/?api_key=${API_KEY}`,\r\n    key: \"heroLore\",\r\n  },\r\n  {\r\n    url: `${API_URI}constants/abilities/?api_key=${API_KEY}`,\r\n    key: \"abilities\",\r\n  },\r\n  {\r\n    url: `${API_URI}constants/items/?api_key=${API_KEY}`,\r\n    key: \"items\",\r\n  },\r\n  {\r\n    url: `${API_URI}constants/item_ids/?api_key=${API_KEY}`,\r\n    key: \"itemIds\",\r\n  },\r\n];\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [attributeFilter, setAttributeFilter] = useState([]);\r\n  const [rangeFilter, setRangeFilter] = useState([]);\r\n  const [roleFilter, setRoleFilter] = useState([]);\r\n  const [sort, setSort] = useState(\"\");\r\n  const [reverse, setReverse] = useState(false);\r\n  const [loading, data] = useFetch(resources);\r\n\r\n  // console.log({ attributeFilter, rangeFilter, roleFilter });\r\n\r\n  const type = (val) => {\r\n    setTerm(val);\r\n  };\r\n\r\n  const handleSort = (value) => {\r\n    setSort(value);\r\n  };\r\n\r\n  const handleAttributeFilter = (values) => {\r\n    setAttributeFilter(values);\r\n  };\r\n\r\n  const handleRangeFilter = (values) => {\r\n    setRangeFilter(values);\r\n  };\r\n\r\n  const handleRoleFilter = (values) => {\r\n    setRoleFilter(values);\r\n  };\r\n\r\n  const toggleReverse = (target) => {\r\n    if (target.classList.contains(\"listbox__option--selected\")) {\r\n      setReverse(!reverse);\r\n    } else {\r\n      setReverse(false);\r\n    }\r\n  };\r\n\r\n  // console.log(data && data.heroes);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        CDN_URI,\r\n        API_URI,\r\n        API_KEY,\r\n        term,\r\n        loading,\r\n        sort,\r\n        reverse,\r\n        attributeFilter,\r\n        rangeFilter,\r\n        roleFilter,\r\n        heroes: data && data.heroes,\r\n        heroesAbilities: data && data.heroAbilities,\r\n        heroLore: data && data.heroLore,\r\n        abilities: data && data.abilities,\r\n        items: data && data.items,\r\n        itemIds: data && data.itemIds,\r\n        type,\r\n        handleSort,\r\n        handleAttributeFilter,\r\n        handleRangeFilter,\r\n        handleRoleFilter,\r\n        toggleReverse,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\Error.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\Home.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\HeroesList.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Hero.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Loading.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\hooks\\useFetch.js",["104","105"],"import React, { useEffect, useState } from \"react\";\r\n\r\n// OBJ requires {url, key}\r\nexport const useFetch = (objs, id) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    // console.log(\"fecthing\", objs);\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const dataObj = {};\r\n        const responsePromiseArr = objs.map((obj) => {\r\n          return fetch(obj.url);\r\n        });\r\n        const responseArr = await Promise.all(responsePromiseArr);\r\n        const dataPromiseArr = responseArr.map((res) => res.json());\r\n        const dataArr = await Promise.all(dataPromiseArr);\r\n\r\n        dataArr.forEach((item, index) => {\r\n          const key = objs[index].key;\r\n          const val = item;\r\n          dataObj[key] = val;\r\n        });\r\n\r\n        setData(dataObj);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  return [loading, data];\r\n};\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\index.js",["106","107"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\n// Page Components\r\nimport HeroHeader from \"./components/HeroHeader\";\r\nimport HeroStats from \"./components/HeroStats\";\r\nimport HeroAbilities from \"./components/HeroAbilities\";\r\nimport HeroPresenceTable from \"./components/HeroPresenceTable\";\r\nimport AverageResultsTable from \"./components/AverageResultsTable\";\r\nimport PopularItemsList from \"./components/PopularItemsList\";\r\nimport HeroMatchups from \"./components/HeroMatchups\";\r\nimport HeroLore from \"./components/HeroLore\";\r\n\r\nconst HeroPage = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    loading,\r\n    heroes,\r\n    heroesAbilities,\r\n    heroLore,\r\n    abilities,\r\n    items,\r\n    itemIds,\r\n    API_URI,\r\n    API_KEY,\r\n  } = useGlobalContext();\r\n  const [heroLoading, data] = useFetch(\r\n    [\r\n      {\r\n        url: `${API_URI}heroes/${id}/itemPopularity/?api_key=${API_KEY}`,\r\n        key: \"itemPopularity\",\r\n      },\r\n      {\r\n        url: `${API_URI}heroes/${id}/matchups/?api_key=${API_KEY}`,\r\n        key: \"matchups\",\r\n      },\r\n      {\r\n        url: `${API_URI}benchmarks?hero_id=${id}&api_key=${API_KEY}`,\r\n        key: \"benchmarks\",\r\n      },\r\n      {\r\n        url: `${API_URI}scenarios/laneRoles?hero_id=${id}&api_key=${API_KEY}`,\r\n        key: \"laneRoles\",\r\n      },\r\n    ],\r\n    id\r\n  );\r\n\r\n  if (loading || heroLoading) return <Loading />;\r\n\r\n  //   TODO ERROR COMPONENT\r\n  if (data && data.matchups.length === 0)\r\n    return <div>Something went wrong...</div>;\r\n  const hero = heroes.find((h) => h.hero_id === parseInt(id));\r\n\r\n  console.log(data.benchmarks);\r\n  console.log(hero);\r\n\r\n  const totalMatchupsPlayed = data.matchups.reduce(\r\n    (reducer, matchup) => (reducer += matchup.games_played),\r\n    0\r\n  );\r\n  const sortedMatchups = data.matchups\r\n    .filter(\r\n      (matchup) =>\r\n        matchup.games_played >\r\n        Math.floor(totalMatchupsPlayed / data.matchups.length / 3)\r\n    )\r\n    .sort((a, b) =>\r\n      b.wins / b.games_played > a.wins / a.games_played ? 1 : -1\r\n    );\r\n\r\n  const mappedMatchups = sortedMatchups\r\n    .slice(0, 8)\r\n    .concat(sortedMatchups.slice(-8))\r\n    .map((matchup) => {\r\n      const { hero_id } = matchup;\r\n      const {\r\n        localized_name,\r\n        primary_attr,\r\n        attack_type,\r\n        img,\r\n        roles,\r\n      } = heroes.find((h) => h.id === hero_id);\r\n      return {\r\n        ...matchup,\r\n        localized_name,\r\n        primary_attr,\r\n        attack_type,\r\n        img,\r\n        roles,\r\n      };\r\n    });\r\n\r\n  return (\r\n    <section className='section section--hero'>\r\n      <Link className='btn' to='/'>\r\n        Back\r\n      </Link>\r\n      <div className='hero'>\r\n        <article className='hero__main'>\r\n          <HeroHeader hero={hero} />\r\n          <HeroAbilities\r\n            heroAbilities={heroesAbilities[hero.name]}\r\n            abilities={abilities}\r\n          />\r\n          <h3>Hero Stats</h3>\r\n          <HeroStats hero={hero} />\r\n        </article>\r\n        <article className='hero__lane-roles'>\r\n          <h3>Lane presence</h3>\r\n          <HeroPresenceTable laneRoles={data.laneRoles} />\r\n        </article>\r\n        <article className='hero__averages'>\r\n          <h3>Average results</h3>\r\n          <AverageResultsTable benchmark={data.benchmarks.result} />\r\n        </article>\r\n        <article className='hero__items'>\r\n          <h3>Popular items</h3>\r\n          <PopularItemsList\r\n            itemPopularity={data.itemPopularity}\r\n            items={items}\r\n            itemIds={itemIds}\r\n          />\r\n        </article>\r\n        <article className='hero__matchups hero__matchups--best'>\r\n          <h3>Best against</h3>\r\n          <HeroMatchups matchupList={mappedMatchups.slice(0, 8)} />\r\n        </article>\r\n        <article className='hero__matchups hero__matchups--worst'>\r\n          <h3>Worst against</h3>\r\n          <HeroMatchups matchupList={mappedMatchups.slice(-8).reverse()} />\r\n        </article>\r\n        <article className='hero__lore'>\r\n          <h3>Hero lore</h3>\r\n          <HeroLore heroLore={heroLore} hero={hero} />\r\n        </article>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroPage;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroLore.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroMatchups.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\PopularItemsList.js",["108"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\nconst PopularItemsList = ({ itemPopularity, items, itemIds }) => {\r\n  const { CDN_URI } = useGlobalContext();\r\n  const [results, setResults] = useState({});\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const tempResults = {};\r\n\r\n    Object.entries(itemPopularity).forEach((stage) => {\r\n      const [key, val] = stage;\r\n      tempResults[key] = [];\r\n      Object.entries(val).forEach((item) => {\r\n        const itemName = itemIds[item[0]];\r\n        const itemObj = {\r\n          id: item[0],\r\n          popularity: item[1],\r\n          name: items[itemName].dname,\r\n          img: items[itemName].img,\r\n          quality: items[itemName].qual,\r\n        };\r\n        tempResults[key].push(itemObj);\r\n      });\r\n      tempResults[key]\r\n        .sort((a, b) => (a.popularity < b.popularity ? 1 : -1))\r\n        .splice(6);\r\n    });\r\n    const ordered = [\r\n      tempResults.start_game_items,\r\n      tempResults.early_game_items,\r\n      tempResults.mid_game_items,\r\n      tempResults.late_game_items,\r\n    ];\r\n    setResults(ordered);\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  if (!isMounted) return <></>;\r\n\r\n  return (\r\n    <div className='hero__items-inner'>\r\n      {results.map((stage, index) => {\r\n        return (\r\n          <div className='stage' key={index}>\r\n            <h4 className='stage__label'>\r\n              {index === 0\r\n                ? \"Start\"\r\n                : index === 1\r\n                ? \"Early game\"\r\n                : index === 2\r\n                ? \"Mid game\"\r\n                : \"Late game\"}\r\n            </h4>\r\n            <div className='stage__items'>\r\n              {stage.map((item) => {\r\n                const { id, img, name, quality } = item;\r\n                return (\r\n                  <div className={`item item--${quality}`} key={id}>\r\n                    <img\r\n                      src={`${CDN_URI}${img}`}\r\n                      alt={name}\r\n                      className='item__img'\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopularItemsList;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\AverageResultsTable.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroPresenceTable.js",["109"],"import React from \"react\";\r\n\r\nconst HeroPresenceTable = ({ laneRoles }) => {\r\n  const lanesByRoles = [];\r\n  let totalGames = 0;\r\n\r\n  laneRoles.forEach((role) => {\r\n    const { lane_role, games, wins, time } = role;\r\n    if (!Array.isArray(lanesByRoles[lane_role - 1])) {\r\n      lanesByRoles[lane_role - 1] = [];\r\n    }\r\n    lanesByRoles[lane_role - 1].push({ lane_role, games, wins, time });\r\n  });\r\n\r\n  const finalRoles = lanesByRoles\r\n    .map((arr) => {\r\n      const totals = arr.reduce((reducer, item) => {\r\n        const { lane_role, games, wins } = item;\r\n        // If key does not exist\r\n        totalGames += parseInt(games);\r\n        if (!reducer.lane_role) {\r\n          return {\r\n            lane_role,\r\n            games: parseInt(games),\r\n            wins: parseInt(wins),\r\n            time: Infinity,\r\n          };\r\n        }\r\n        return {\r\n          ...reducer,\r\n          games: parseInt(reducer.games) + parseInt(games),\r\n          wins: parseInt(reducer.wins) + parseInt(wins),\r\n        };\r\n      }, {});\r\n      return [...arr, totals];\r\n    })\r\n    .sort((a, b) => b[b.length - 1].games - a[a.length - 1].games);\r\n\r\n    return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th>Role</th>\r\n          <th>15 min</th>\r\n          <th>30 min</th>\r\n          <th>45 min</th>\r\n          <th>60 min</th>\r\n          <th>90 min</th>\r\n          <th>Total</th>\r\n          <th>Games</th>\r\n        </tr>\r\n        {finalRoles.map((role, index) => {\r\n          const { lane_role } = role[0];\r\n          const games = role[role.length - 1].games;\r\n\r\n          if (games / totalGames < 0.04) {\r\n            return;\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <th>\r\n                {lane_role === 1\r\n                  ? \"Safe Lane\"\r\n                  : lane_role === 2\r\n                  ? \"Mid Lane\"\r\n                  : lane_role === 3\r\n                  ? \"Off Lane\"\r\n                  : \"Jungle\"}\r\n              </th>\r\n              {role.map((arr, i) => {\r\n                const winrate = parseInt(arr.wins) / parseInt(arr.games);\r\n                return <td key={i}>{(winrate * 100).toFixed(2)}</td>;\r\n              })}\r\n              <td>{games}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default HeroPresenceTable;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroAbilities.js",["110"],"import React from \"react\";\r\nimport { useGlobalContext } from \"../../../context\";\r\n\r\n// TODO: Add tooltips on abilities.\r\n\r\nconst HeroAbilities = ({ heroAbilities, abilities }) => {\r\n  const { CDN_URI } = useGlobalContext();\r\n  const mappedAbilities = heroAbilities.abilities.map((a) => {\r\n    return abilities[a];\r\n  });\r\n\r\n  return (\r\n    <div className='hero__abilities'>\r\n      {mappedAbilities.map((ability) => {\r\n        if (!ability.dname) return;\r\n        return (\r\n          <div className='hero__ability' key={ability.dname}>\r\n            <img\r\n              src={`${CDN_URI}${ability.img}`}\r\n              alt={ability.dname}\r\n              className='hero__ability-img'\r\n            />\r\n            {/* Tooltip also */}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroAbilities;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroStats.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\pages\\HeroPage\\components\\HeroHeader.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\SearchBar.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\Option.js",[],"C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\SortListbox.js",["111","112"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Option from \"../components/Option\";\r\n\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\n\r\nconst SortListbox = ({\r\n  defaultText,\r\n  options = [],\r\n  callback,\r\n  reverse,\r\n  toggleReverse,\r\n}) => {\r\n  const [value, setValue] = useState(\"localized_name\");\r\n  const [open, setOpen] = useState(false);\r\n  const [label, setLabel] = useState(\"\");\r\n  const listboxRef = useRef(null);\r\n\r\n  const handleClick = (value, target) => {\r\n    setValue(value);\r\n    setOpen(false);\r\n\r\n    toggleReverse(target);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (listboxRef.current && !listboxRef.current.contains(e.target)) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const option = options.find((option) => option.value === value);\r\n\r\n    if (option) {\r\n      setLabel(option.label);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (callback) {\r\n      callback(value);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='listbox listbox--single' ref={listboxRef}>\r\n      <button onClick={() => setOpen(!open)} className='listbox__button'>\r\n        {label || defaultText} {reverse ? \"(desc)\" : \"(asc)\"}\r\n        <FaCaretDown className='listbox__caret' />\r\n      </button>\r\n      {open && (\r\n        <ul className='listbox__list'>\r\n          {options.map((option) => {\r\n            return (\r\n              <Option\r\n                key={option.value}\r\n                selected={value === option.value}\r\n                onClick={handleClick}\r\n                option={option}\r\n                isMultiselect={false}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortListbox;\r\n","C:\\Maciej\\Projects\\dota2-heroes-react\\src\\components\\FilterListbox.js",["113"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Option from \"../components/Option\";\r\n\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\n\r\nconst FilterListbox = ({ defaultText, options = [], callback, active }) => {\r\n  const [values, setValues] = useState(\r\n    active ? [...options.map((o) => o.value)] : []\r\n  );\r\n  const [open, setOpen] = useState(false);\r\n  const listboxRef = useRef(null);\r\n\r\n  const handleClick = (value) => {\r\n    let newValues = [...values];\r\n    if (values.includes(value)) {\r\n      const index = values.indexOf(value);\r\n      newValues.splice(index, 1);\r\n    } else {\r\n      newValues.push(value);\r\n    }\r\n    setValues(newValues);\r\n  };\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (listboxRef.current && !listboxRef.current.contains(e.target)) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (callback) {\r\n      callback(\r\n        values,\r\n        options.map((o) => o.value)\r\n      );\r\n    }\r\n  }, [values]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className='listbox listbox--multi' ref={listboxRef}>\r\n      <button onClick={() => setOpen(!open)} className='listbox__button'>\r\n        {options\r\n          .filter((o) => values.includes(o.value))\r\n          .map((o) => o.label)\r\n          .join(\", \") || defaultText}{\" \"}\r\n        <FaCaretDown className='listbox__caret' />\r\n      </button>\r\n      {open && (\r\n        <ul className='listbox__list'>\r\n          {options.map((option) => {\r\n            return (\r\n              <Option\r\n                key={option.value}\r\n                onClick={handleClick}\r\n                option={option}\r\n                selected={values.includes(option.value)}\r\n                isMultiselect={true}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterListbox;\r\n",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":1,"column":39,"nodeType":"120","messageId":"121","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"123","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":34,"column":6,"nodeType":"126","endLine":34,"endColumn":10,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"122","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"129","line":39,"column":6,"nodeType":"126","endLine":39,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":57,"column":13,"nodeType":"133","messageId":"134","endLine":57,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":15,"column":29,"nodeType":"133","messageId":"134","endLine":15,"endColumn":36},{"ruleId":"124","severity":1,"message":"135","line":37,"column":6,"nodeType":"126","endLine":37,"endColumn":13,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"137","line":43,"column":6,"nodeType":"126","endLine":43,"endColumn":13,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":37,"column":6,"nodeType":"126","endLine":37,"endColumn":14,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useGlobalContext' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'objs'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'itemIds', 'itemPopularity', and 'items'. Either include them or remove the dependency array.",["144"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["146"],"React Hook useEffect has missing dependencies: 'callback' and 'options'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [id, objs]",{"range":"158","text":"159"},"Update the dependencies array to be: [itemIds, itemPopularity, items]",{"range":"160","text":"161"},"Update the dependencies array to be: [options, value]",{"range":"162","text":"163"},"Update the dependencies array to be: [callback, value]",{"range":"164","text":"165"},"Update the dependencies array to be: [callback, options, values]",{"range":"166","text":"167"},[1011,1015],"[id, objs]",[1205,1207],"[itemIds, itemPopularity, items]",[877,884],"[options, value]",[968,975],"[callback, value]",[970,978],"[callback, options, values]"]